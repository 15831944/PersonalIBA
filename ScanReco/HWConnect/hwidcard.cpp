// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "hwidcard.h"

/////////////////////////////////////////////////////////////////////////////
// CHWIDCard

IMPLEMENT_DYNCREATE(CHWIDCard, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CHWIDCard properties

CString CHWIDCard::GetIDName()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDName(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDAdrr()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDAdrr(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDNation()
{
	CString result;
	GetProperty(0x3, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDNation(LPCTSTR propVal)
{
	SetProperty(0x3, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDNumber()
{
	CString result;
	GetProperty(0x4, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDNumber(LPCTSTR propVal)
{
	SetProperty(0x4, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDSex()
{
	CString result;
	GetProperty(0x5, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDSex(LPCTSTR propVal)
{
	SetProperty(0x5, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDSignDate()
{
	CString result;
	GetProperty(0x6, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDSignDate(LPCTSTR propVal)
{
	SetProperty(0x6, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDBirthday()
{
	CString result;
	GetProperty(0x7, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDBirthday(LPCTSTR propVal)
{
	SetProperty(0x7, VT_BSTR, propVal);
}

CString CHWIDCard::GetIDTimeLimit()
{
	CString result;
	GetProperty(0x8, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDTimeLimit(LPCTSTR propVal)
{
	SetProperty(0x8, VT_BSTR, propVal);
}

CString CHWIDCard::GetCarType()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetCarType(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

CString CHWIDCard::GetPassportNo()
{
	CString result;
	GetProperty(0xa, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetPassportNo(LPCTSTR propVal)
{
	SetProperty(0xa, VT_BSTR, propVal);
}

CString CHWIDCard::GetImgFileName()
{
	CString result;
	GetProperty(0xb, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetImgFileName(LPCTSTR propVal)
{
	SetProperty(0xb, VT_BSTR, propVal);
}

BOOL CHWIDCard::GetSaveLittleImg()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CHWIDCard::SetSaveLittleImg(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CHWIDCard::GetAutoCheckPaper()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CHWIDCard::SetAutoCheckPaper(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

CString CHWIDCard::GetIDPhotoFileName()
{
	CString result;
	GetProperty(0xe, VT_BSTR, (void*)&result);
	return result;
}

void CHWIDCard::SetIDPhotoFileName(LPCTSTR propVal)
{
	SetProperty(0xe, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CHWIDCard operations

void CHWIDCard::HWCalibrate()
{
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CHWIDCard::HWScan(short CardType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		CardType);
	return result;
}

BOOL CHWIDCard::HWInitScanner(LPCTSTR ImgFileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		ImgFileName);
	return result;
}

void CHWIDCard::HWEndScan()
{
	InvokeHelper(0x12, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CHWIDCard::HWUserdefinedScan4(short iScanType, short iScanDpi, short usScanStartX, short usScanStartY, short usScanWidth, short usScanHeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		iScanType, iScanDpi, usScanStartX, usScanStartY, usScanWidth, usScanHeight);
	return result;
}

CString CHWIDCard::HWGetImageContent()
{
	CString result;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

BOOL CHWIDCard::HWClearTempFile()
{
	BOOL result;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}
